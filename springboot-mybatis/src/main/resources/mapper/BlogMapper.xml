<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxd.mapper.BlogMapper">
  <resultMap id="BaseResultMap" type="com.xxd.entity.Blog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="comment_size" jdbcType="INTEGER" property="commentSize" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="read_size" jdbcType="INTEGER" property="readSize" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="tags" jdbcType="VARCHAR" property="tags" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="vote_size" jdbcType="INTEGER" property="voteSize" />
    <result column="catalog_id" jdbcType="BIGINT" property="catalogId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xxd.entity.BlogWithBLOBs">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="html_content" jdbcType="LONGVARCHAR" property="htmlContent" />
  </resultMap>
  <sql id="Base_Column_List">
    id, comment_size, create_time, read_size, summary, tags, title, vote_size, catalog_id, 
    user_id
  </sql>
  <sql id="Blob_Column_List">
    content, html_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from blog
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.xxd.entity.BlogWithBLOBs">
    insert into blog (id, comment_size, create_time, 
      read_size, summary, tags, 
      title, vote_size, catalog_id, 
      user_id, content, html_content
      )
    values (#{id,jdbcType=BIGINT}, #{commentSize,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{readSize,jdbcType=INTEGER}, #{summary,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{voteSize,jdbcType=INTEGER}, #{catalogId,jdbcType=BIGINT}, 
      #{userId,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR}, #{htmlContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xxd.entity.BlogWithBLOBs">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="commentSize != null">
        comment_size,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="readSize != null">
        read_size,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="tags != null">
        tags,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="voteSize != null">
        vote_size,
      </if>
      <if test="catalogId != null">
        catalog_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="htmlContent != null">
        html_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="commentSize != null">
        #{commentSize,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readSize != null">
        #{readSize,jdbcType=INTEGER},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="voteSize != null">
        #{voteSize,jdbcType=INTEGER},
      </if>
      <if test="catalogId != null">
        #{catalogId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="htmlContent != null">
        #{htmlContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xxd.entity.BlogWithBLOBs">
    update blog
    <set>
      <if test="commentSize != null">
        comment_size = #{commentSize,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readSize != null">
        read_size = #{readSize,jdbcType=INTEGER},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="tags != null">
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="voteSize != null">
        vote_size = #{voteSize,jdbcType=INTEGER},
      </if>
      <if test="catalogId != null">
        catalog_id = #{catalogId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="htmlContent != null">
        html_content = #{htmlContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.xxd.entity.BlogWithBLOBs">
    update blog
    set comment_size = #{commentSize,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      read_size = #{readSize,jdbcType=INTEGER},
      summary = #{summary,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      vote_size = #{voteSize,jdbcType=INTEGER},
      catalog_id = #{catalogId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      content = #{content,jdbcType=LONGVARCHAR},
      html_content = #{htmlContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xxd.entity.Blog">
    update blog
    set comment_size = #{commentSize,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      read_size = #{readSize,jdbcType=INTEGER},
      summary = #{summary,jdbcType=VARCHAR},
      tags = #{tags,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      vote_size = #{voteSize,jdbcType=INTEGER},
      catalog_id = #{catalogId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>